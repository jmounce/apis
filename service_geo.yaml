openapi: 3.0.1
info:
  title: Geo Service
  description: Returns information about geographical locations
  version: v1
paths:
  /us-city:
    get:
      tags:
        - US City
      summary: Query City information using search options
      parameters:
        - name: name
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: zip
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: isoState
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: fipsCounty
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: exactNameMatch
          in: query
          description: ''
          schema:
            type: boolean
            description: ''
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoCityUs'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoCityUs'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoCityUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCity'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US City
      summary: Does a City exist using search options?
      parameters:
        - name: name
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: isoState
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: exactNameMatch
          in: query
          description: ''
          schema:
            type: boolean
            description: ''
            default: false
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCity'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  '/us-city/{id}':
    get:
      tags:
        - US City
      summary: 'Get a City by its unique ID (of the form: CityName-StateIso)'
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GeoCityUs'
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCityUs'
            text/json:
              schema:
                $ref: '#/components/schemas/GeoCityUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCity/{id}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US City
      summary: 'Does a City exist that has this unique ID (of the form: CityName-StateIso)?'
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCity/{id}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  /us-county:
    get:
      tags:
        - US County
      summary: Query County information using search options
      parameters:
        - name: name
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: zip
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: isoState
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: exactNameMatch
          in: query
          description: ''
          schema:
            type: boolean
            description: ''
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoCountyUs'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoCountyUs'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoCountyUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCounty'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US County
      summary: Does a County exist using search options?
      parameters:
        - name: name
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: isoState
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: exactNameMatch
          in: query
          description: ''
          schema:
            type: boolean
            description: ''
            default: false
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCounty'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  '/us-county/{fips}':
    get:
      tags:
        - US County
      summary: Get a County by its Full FIPS code
      parameters:
        - name: fips
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GeoCountyUs'
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCountyUs'
            text/json:
              schema:
                $ref: '#/components/schemas/GeoCountyUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCounty/{fips}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US County
      summary: Does a County exist with the given Full FIPS code?
      parameters:
        - name: fips
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsCounty/{fips}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  /us-state:
    get:
      tags:
        - US State
      summary: Query State information using search options
      parameters:
        - name: fipsCounty
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: zip
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: name
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: exactNameMatch
          in: query
          description: ''
          schema:
            type: boolean
            description: ''
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoStateUs'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoStateUs'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoStateUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsState'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US State
      summary: Does a State exist using the given search options?
      parameters:
        - name: name
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: exactNameMatch
          in: query
          description: ''
          schema:
            type: boolean
            description: ''
            default: false
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsState'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  '/us-state/{isoState}':
    get:
      tags:
        - US State
      summary: Get a State by ISO-3166 code
      parameters:
        - name: isoState
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GeoStateUs'
            application/json:
              schema:
                $ref: '#/components/schemas/GeoStateUs'
            text/json:
              schema:
                $ref: '#/components/schemas/GeoStateUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsState/{isoState}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US State
      summary: Does a State exist with the given ISO-3166 code?
      parameters:
        - name: isoState
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsState/{isoState}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  /us-zipcode:
    get:
      tags:
        - US ZipCode
      summary: Query Zip Code information using search options
      parameters:
        - name: fipsCounty
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: isoState
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: idCity
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoZipCodeUs'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoZipCodeUs'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoZipCodeUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsZipCode'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
  '/us-zipcode/{zip}':
    get:
      tags:
        - US ZipCode
      summary: Fetch a Zip Code by number
      parameters:
        - name: zip
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GeoZipCodeUs'
            application/json:
              schema:
                $ref: '#/components/schemas/GeoZipCodeUs'
            text/json:
              schema:
                $ref: '#/components/schemas/GeoZipCodeUs'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsZipCode/{zip}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
    head:
      tags:
        - US ZipCode
      summary: Does a Zip Code exist with the given number?
      parameters:
        - name: zip
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: http_proxy
        httpMethod: ANY
        uri: 'http://${stageVariables.nlbhostname}/UsZipCode/{zip}'
        connectionId: '${stageVariables.nlbarn}'
        connectionType: VPC_LINK
        timeoutInMillis: 5000
components:
  schemas:
    GeoCountySimpleUs:
      type: object
      properties:
        countyName:
          type: string
          nullable: true
          readOnly: true
        countyFips:
          type: string
          nullable: true
          readOnly: true
        fullFips:
          type: string
          nullable: true
          readOnly: true
        stateAbbreviation:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    GeoZipCodeSimpleUs:
      type: object
      properties:
        zipCode:
          type: string
          nullable: true
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
          readOnly: true
        longitude:
          type: number
          format: double
          nullable: true
          readOnly: true
      additionalProperties: false
    GeoStateSimpleUs:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        abbreviation:
          type: string
          nullable: true
          readOnly: true
        isTerritory:
          type: boolean
          readOnly: true
        countryCode:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    GeoCityUs:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
        counties:
          type: array
          items:
            $ref: '#/components/schemas/GeoCountySimpleUs'
          nullable: true
          readOnly: true
        zipCodes:
          type: array
          items:
            $ref: '#/components/schemas/GeoZipCodeSimpleUs'
          nullable: true
          readOnly: true
        state:
          $ref: '#/components/schemas/GeoStateSimpleUs'
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties:
        type: object
        additionalProperties: false
    GeoCitySimpleUs:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
        stateAbbreviation:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    GeoCountyUs:
      type: object
      properties:
        countyName:
          type: string
          nullable: true
          readOnly: true
        countyFips:
          type: string
          nullable: true
          readOnly: true
        fullFips:
          type: string
          nullable: true
          readOnly: true
        state:
          $ref: '#/components/schemas/GeoStateSimpleUs'
        cities:
          type: array
          items:
            $ref: '#/components/schemas/GeoCitySimpleUs'
          nullable: true
          readOnly: true
        zipCodes:
          type: array
          items:
            $ref: '#/components/schemas/GeoZipCodeSimpleUs'
          nullable: true
          readOnly: true
      additionalProperties: false
    GeoCountry:
      type: object
      properties:
        countryIso:
          type: string
          nullable: true
          readOnly: true
        countryName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    GeoStateUs:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        abbreviation:
          type: string
          nullable: true
          readOnly: true
        isTerritory:
          type: boolean
          readOnly: true
        country:
          $ref: '#/components/schemas/GeoCountry'
      additionalProperties: false
    GeoZipCodeUs:
      type: object
      properties:
        zipCode:
          type: string
          nullable: true
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
          readOnly: true
        longitude:
          type: number
          format: double
          nullable: true
          readOnly: true
        cities:
          type: array
          items:
            $ref: '#/components/schemas/GeoCitySimpleUs'
          nullable: true
          readOnly: true
        counties:
          type: array
          items:
            $ref: '#/components/schemas/GeoCountySimpleUs'
          nullable: true
          readOnly: true
        states:
          type: array
          items:
            $ref: '#/components/schemas/GeoStateSimpleUs'
          nullable: true
          readOnly: true
        country:
          $ref: '#/components/schemas/GeoCountry'
      additionalProperties: false
  securitySchemes: {}
servers:
  - description: sandbox
    url: 'https://lbg4zh0xxj.execute-api.us-west-2.amazonaws.com/sandbox'
  - url: 'https://lbg4zh0xxj.execute-api.us-west-2.amazonaws.com/production'
    description: production
